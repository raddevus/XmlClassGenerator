	
	public static {0} Create(string inputFile)
    {{
        return DeSerializeObject<{0}>(inputFile);
    }}


    /// <summary>
    /// Serializes an object.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <param name="serializableObject"></param>
    /// <param name="fileName"></param>
    public void SerializeObject<T>(T serializableObject, string fileName)
    {{
        if (serializableObject == null) {{ return; }}

        try
        {{
            XmlDocument xmlDocument = new XmlDocument();
            XmlSerializer serializer = new XmlSerializer(serializableObject.GetType());
                
            using (MemoryStream stream = new MemoryStream())
            {{
                serializer.Serialize(stream, serializableObject);
                stream.Position = 0;
                xmlDocument.Load(stream);
                // ######################################################
                // ######################################################
                // I remove the two following attributes, because
                // it looks as if they are set by default by the 
                // xmldocument object and then they appear 
                // in the output.
                xmlDocument.DocumentElement.RemoveAttribute("xmlns:xsd");
                xmlDocument.DocumentElement.RemoveAttribute("xmlns:xsi");
                // ######################################################
                // ######################################################

                xmlDocument.Save(fileName);
                stream.Close();
            }}
        }}
        finally {{ }}
    }}


    /// <summary>
    /// Deserializes an xml file into an object list
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <param name="fileName"></param>
    /// <returns></returns>
    public static T DeSerializeObject<T>(string inputFile)
    {{
        if (string.IsNullOrEmpty(inputFile)) {{ return default(T); }}

        T objectOut = default(T);

        try
        {{
            string attributeXml = string.Empty;

            XmlDocument xmlDocument = new XmlDocument();
            xmlDocument.Load(inputFile);

            string xmlString = xmlDocument.OuterXml;

            using (StringReader read = new StringReader(xmlString))
            {{
                System.Type outType = typeof(T);

                XmlSerializer serializer = new XmlSerializer(outType);
                    
                using (XmlReader reader = new XmlTextReader(read))
                {{
                        
                    objectOut = (T)serializer.Deserialize(reader);
                    File.AppendAllText(@"c:\users\roger.deutsch\temp\attrs.txt", 
                        string.Format("attributeCount : {{0}}",reader.AttributeCount));
                    reader.Close();
                }}

                read.Close();
            }}
        }}
        finally {{ }}


        return objectOut;
    }}